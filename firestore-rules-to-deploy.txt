rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own animals
    match /animals/{animalId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.ownerId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;
    }
    
    // Users can only access weight records for their own animals
    match /weightRecords/{recordId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(resource.data.animalId)).data.ownerId == request.auth.uid;
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(request.resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(request.resource.data.animalId)).data.ownerId == request.auth.uid;
    }
    
    // Users can only access height records for their own animals
    match /heightRecords/{recordId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(resource.data.animalId)).data.ownerId == request.auth.uid;
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(request.resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(request.resource.data.animalId)).data.ownerId == request.auth.uid;
    }
    
    // Users can only access medical records for their own animals
    match /medicalRecords/{recordId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(resource.data.animalId)).data.ownerId == request.auth.uid;
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(request.resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(request.resource.data.animalId)).data.ownerId == request.auth.uid;
    }
    
    // Users can only access health updates for their own animals
    match /healthUpdates/{updateId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(resource.data.animalId)).data.ownerId == request.auth.uid;
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(request.resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(request.resource.data.animalId)).data.ownerId == request.auth.uid;
    }
    
    // Users can only access audit logs for their own animals
    match /auditLogs/{logId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(resource.data.animalId)).data.ownerId == request.auth.uid;
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/animals/$(request.resource.data.animalId)) &&
        get(/databases/$(database)/documents/animals/$(request.resource.data.animalId)).data.ownerId == request.auth.uid;
      // Audit logs should not be updated or deleted by users
    }
  }
}